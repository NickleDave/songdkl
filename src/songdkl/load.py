from __future__ import annotations
import logging
import pathlib
import warnings

import numpy as np
import zarr
from zarr import Array, Group

from .prep import prep


logger = logging.getLogger(__name__)


def load_or_prep(data_path: str | pathlib.Path,
                 max_wavs: int | None = None,
                 max_num_psds: int | None = None,
                 ) -> np.ndarray:
    """Either load an array of PSDs from a .zarr file,
    or prepare the PSDs from a directory of .wav files.

    Parameters
    ----------
    data_path : str or pathlib.Path
        Either a path to a directory with .wav files of songs,
        or a path to a .songdkl.zarr file generated by songdkl prep.
    max_wavs : int
        Maximum number of wav files to use.
        Default is None, in which case all are used.
    max_num_psds : int
        Maximum number of power spectral densities (PSDs) to calculate.
        Default is None, in which case all are used.

    Returns
    -------
    segedpsds : numpy.ndarray
        Array with PSDs from syllable segments.
    """
    data_path = pathlib.Path(data_path)
    if data_path.suffix == '.zarr':
        if max_wavs is not None or max_num_psds is not None:
            warnings.warn(
                f'Values were specified for max_wavs or max_num_psds, '
                f'but data_path was recognized as a .zarr file. '
                f'These values are not applied to already prepared datasets. '
                f'To apply them, run this function on a directory of .wav files.'
            )
        segedpsds = load(zarr_path=data_path)
    elif data_path.is_dir():
        segedpsds = prep(data_path, max_wavs, max_num_psds)
    else:
        raise ValueError(
            f'Not recognized as a .zarr file or a directory: {data_path}'
        )
    return segedpsds


def load(zarr_path: str | pathlib.Path) -> Array | Group:
    """Load an array saved in a .zarr file.

    Parameters
    ----------
    zarr_path : str, pathlib.Path
        Path to a file with extension .zarr,
        saved by ``songdkl.prep_and_save``

    Returns
    -------
    segedpsds : numpy.ndarray
        Array with PSDs from syllable segments.
    """
    logger.log(
        msg=f'Loading array from: {zarr_path}',
        level=logging.INFO,
    )
    return zarr.load(zarr_path)
